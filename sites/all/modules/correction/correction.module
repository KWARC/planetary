<?php

function correction_node_info() {
 return array(
	      'correction' => array(
				    'name' => "Correction",
				    'base' => 'node_content',
				    'description' => 'Here for pointing out mistakes.',
				    'has_title' => '1',
				    'title_label' => 'Title',
				    'help' => '',
				    ));
}

define("CORRECTION_ATTACH_TYPES", serialize(array('article', 'image', 'problem')));

function correction_model_getAllCorrections($headers) {
  $query = db_select('node', 'n')
          ->fields('n', array('nid', 'title', 'changed'))
          ->extend('PagerDefault')
          ->extend('TableSort')
          ->limit(20);
  $query = $query->orderByHeader($headers);
  $query->innerJoin('field_data_field_correction_accepted', 'fca', 'fca.entity_id = n.nid');
  $query->innerJoin('field_data_field_correction_closed', 'fcc', 'fcc.entity_id = n.nid');
  $query->innerJoin('users', 'u', 'u.uid = n.uid');
  $query->fields('fca', array('field_correction_accepted_value'));
  $query->fields('fcc', array('field_correction_closed_value'));
  $query->fields('u', array('uid', 'name'));
  $result = $query->execute();
  return $result;
}

function correction_view_correctionPage() {
  $header = array(array('data' => 'Title', 'field' => 'n.title'),
      array('data' => "Author", 'field' => 'u.name'),
      array('data' => "Updated", 'field' => 'n.changed'),
      array('data' => 'Status', 'field' => 'fca.field_correction_accepted_value')
  );
  $corrections = correction_model_getAllCorrections($header);
  $rows = array();
  foreach ($corrections as $correction) {
    $status = 'None';
    if ($correction->field_correction_accepted_value && $correction->field_correction_closed_value) {
      $status = 'Accepted';
    } else if (!$correction->field_correction_accepted_value && $correction->field_correction_closed_value) {
      $status = 'Rejected';
    } else {
      $status = 'Pending';
    }
    $rows[] = array(
        array('data' => l($correction->title, 'node/' . $correction->nid), 'field' => 'n.title'),
        array('data' => l($correction->name, 'user/' . $correction->uid), 'field' => 'n.title'),
        array('data' => date('Y-m-d', $correction->changed), 'field' => 'n.changed', 'sort' => 'DESC'),
        array('data' => $status, 'field' => 'fca.field_correction_accepted_value')
    );
  }
  return l('Add a new correction', 'node/add/correction') . theme('table', array(
              'header' => $header,
              'rows' => $rows
          )) . theme('pager');
}

/**
 * Implementation of hook_menu
 * Two new paths for accept correction and reject correction. correction/:nid/accept|reject
 * @return array
 */
function correction_menu() {
  $items = array();

  $items['correction/%/accept'] = array(
      'title' => 'Accept Correction',
      'type' => MENU_CALLBACK,
      'page callback' => 'correction_accept_correction',
      'page arguments' => array(1),
      'access arguments' => array('create correction content')
  );

  $items['corrections'] = array(
      'title' => 'Corrections',
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'correction_view_correctionPage',
      'page arguments' => array(1),
      'access callback' => true
  );

  $items['correction/%/reject'] = array(
      'title' => 'Reject Correction',
      'type' => MENU_CALLBACK,
      'page callback' => 'correction_reject_correction',
      'page arguments' => array(1),
      'access arguments' => array('create correction content')
  );

  return $items;
}

/**
 * Accepts a correction for a given article. Does the necesarry checks, no other action required
 * @param $nid The correction's id 
 */
function correction_accept_correction($nid) {
  global $user;  
  $correction = node_load($nid);
  $article = node_load($correction->field_correction_article['und'][0]['nid']);
  if ($article->uid === $user->uid) {
    $correction->field_correction_accepted['und'][0]['value'] = 1;
    $correction->field_correction_closed['und'][0]['value'] = 1;
    node_save($correction);
    drupal_set_message("The correction was accepted");
    
    $points_params = array('uid' => $user->uid,
                            'points' => 10,
                            'description' => 'Correction has been accepted',
                            'entity_id' => $nid,
                            'entity_type' => 'node'
                    );
    userpoints_userpointsapi($points_params);
    
    drupal_set_message("added 10 points");
    
  } else {
    drupal_set_message("You can't accept the correction!");
  }
  drupal_goto();
}

/**
 * Rejects a correction for a given article. Does the necesarry checks, no other action required
 * @param $nid The correction's id 
 */
function correction_reject_correction($nid) {
  global $user;
  $correction = node_load($nid);
  $article = node_load($correction->field_correction_article['und'][0]['nid']);
  if ($article->uid === $user->uid) {
    $correction->field_correction_accepted['und'][0]['value'] = 0;
    $correction->field_correction_closed['und'][0]['value'] = 1;
    node_save($correction);
    drupal_set_message("The correction was rejected");
  } else {
    drupal_set_message("You can't reject the correction!");
  }
  drupal_goto();
}

/**
 * Implementation of hook_form_FORM_ID_alter()
 * Disables the fields that are only used for internal usage.
 * @param array $form
 * @param array $form_state
 * @param array $form_id 
 */
function correction_form_correction_node_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  unset($form['field_correction_accepted']);
  unset($form['field_correction_closed']);
  $form['field_correction_article']['und']['#value'] = arg(3);
}

function correction_add_links($node) {
  $links = array(
      'add-correction' => l('Add correction', 'node/add/correction/' . $node->nid)
  );
  return $links;
}

/**
 * Implementation of hook_node_view()
 * Adds two markup fields to the correction fields. Accept/Reject links | Status of the correction
 * @todo Show it to groups as well, not only to author
 * @param stdClass $node
 * @param string $view_mode 
 */
function correction_node_view($node, $view_mode) {
  if (in_array($node->type, unserialize(CORRECTION_ATTACH_TYPES))) {
    $newlinks = array();
    if (isset($node->content['planetary_links'])) {
      //dd($node->content['planetary_links']);
	$oldlinks=$node->content['planetary_links']['#links'];
	//dd($oldlinks,"old");
	if(!empty($oldlinks)) {
	  $newlinks=array_merge($oldlinks,correction_add_links($node));
	} else {
	  $newlinks = correction_add_links($node);
	  //  dd($newlinks,"NEW - inner ");
	}
    } else {
      $newlinks = correction_add_links($node);
      // dd($newlinks,"NEW - outer ");
    }

    $node->content['planetary_links'] = array(
        '#markup' => '',
        '#weight' => 10,
        '#theme' => 'planetary_links',
        '#links' => $newlinks
    );
  }

  if ($node->type == 'correction') {
    global $user;
    $article = node_load($node->field_correction_article['und'][0]['nid']);
    if ($article->uid == $user->uid && !$node->field_correction_closed['und']['0']['value']) {
      $node->content['correction_links'] = array(
          '#markup' => '<h4 style="font-weight:bold">Manage Correction:</h4>' . l('Accept Correction', 'correction/' . $node->nid . '/accept', array('query' => drupal_get_destination())) . ' | ' . l('Reject Correction', 'correction/' . $node->nid . '/reject', array('query' => drupal_get_destination())),
          '#weight' => '-3'
      );
    }
    $status = 'Waiting for response';
    if ($node->field_correction_closed['und']['0']['value']) {
      $status = $node->field_correction_accepted['und'][0]['value'] ? "Accepted" : "Rejected";
    }
    $node->content['correction_status'] = array(
        '#markup' => '<b>Status: </b>' . $status,
        '#weight' => '1'
    );
  }
}

