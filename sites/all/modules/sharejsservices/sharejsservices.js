// Generated by CoffeeScript 1.3.1
(function() {
  var ShareJSConnection;

  ShareJSConnection = function(doc, editor) {
    this.doc = doc;
    this.editor = editor;
    this.initToolbar = function(toolbardiv) {
      var btn, id, serv, services, _i, _len, _results;
      services = [
        {
          text: "Detect Semantic Terms",
          id: "termref"
        }, {
          text: "Hide ",
          id: "hider"
        }
      ];
      _results = [];
      for (id = _i = 0, _len = services.length; _i < _len; id = ++_i) {
        serv = services[id];
        btn = jQuery("<button>").append(serv.text);
        jQuery(btn).button({
          text: true
        });
        btn.click(serv, function(evt) {
          console.log(evt.data);
          return false;
        });
        _results.push(toolbardiv.append(btn));
      }
      return _results;
    };
    return {
      initToolbar: this.initToolbar
    };
  };

  Drupal.ShareJS = {
    _isInit: false,
    init: function(callback) {
      if (this._isInit === true) {
        return;
      }
      return async.waterfall([
        function(callback) {
          return jQuery.getScript(Drupal.settings.ShareJSConfig.url + "channel/bcsocket.js", function(success, textStatus, jqXHR) {
            return callback(null);
          });
        }, function(callback) {
          return jQuery.getScript(Drupal.settings.ShareJSConfig.url + "share/AttributePool.js", function(success, textStatus, jqXHR) {
            return callback(null);
          });
        }, function(callback) {
          return jQuery.getScript(Drupal.settings.ShareJSConfig.url + "share/Changeset.js", function(success, textStatus, jqXHR) {
            return callback(null);
          });
        }, function(callback) {
          return jQuery.getScript(Drupal.settings.ShareJSConfig.url + "share/share.uncompressed.js", function(success, textStatus, jqXHR) {
            return callback(null);
          });
        }
      ], function(err) {
        return callback();
      });
    },
    assertInit: function(callback) {
      var _this;
      _this = this;
      if (this._isInit === false) {
        return this.init(function() {
          _this._isInit = true;
          return callback.call(_this);
        });
      }
    },
    connectServices: function(docName, editorType, editor, initText, callback) {
      return this.assertInit(function() {
        return async.waterfall([
          function(callback) {
            return jQuery.getScript(Drupal.settings.ShareJSConfig.url + "share/" + editorType + ".js", function(success, textStatus, jqXHR) {
              return callback(null);
            });
          }, function(callback) {
            return sharejs.open(docName, 'etherpad', Drupal.settings.ShareJSConfig.url + "channel", callback);
          }, function(doc, callback) {
            sharetext = doc.type.api.getText.apply(doc);
            if (sharetext != initText) {
              choice = confirm("Somebody else is editing this document. Would you like to collaborate on it?");
              if (!choice) {
                docName += Math.random();
                sharejs.open(docName, 'etherpad', Drupal.settings.ShareJSConfig.url + "channel", callback);
              } else
              callback(null, doc, false);
            } else 
            callback(null, doc, false);
          }, function(doc, keep, callback) {
            if (keep)
              doc["attach_" + editorType](editor, true);
            else
              doc["attach_" + editorType](editor, false);
            return callback(null, new ShareJSConnection(doc, editor));
          }
        ], function(err, sharejsconn) {
          return callback(err, sharejsconn);
        });
      });
    }
  };

}).call(this);
