<?php

function collection_menu() {
  //$items['collections']
  //$items['collection/%']
  //$items['collection/%/attach/%']
  //$items['collection/%/detach/%']
  //$items['user/%/collections']

  $items = array();

  $items['collection/%/attach'] = array(
    'title' => 'Attach content',
    'type' => MENU_CALLBACK,
    'page callback' => 'collection_attach_content',
    'page arguments' => array(1),
    'access arguments' => array('create correction content')
  );


  $items['collection/confirm/%/%'] = array(
    'title' => 'Confirm attachment',
    'type' => MENU_CALLBACK,
    'page callback' => 'collection_confirm_attachment',
    'page arguments' => array(2, 3), //'nid_of_article','nid_of_collection'),
    'access arguments' => array('create correction content')
  );

  $items['collection/detach/%/%'] = array(
    'title' => 'Detach content from collection',
    'type' => MENU_CALLBACK,
    'page callback' => 'collection_detach_content',
    'page arguments' => array(2, 3), //'nid_of_article','nid_of_collection'),
    'access arguments' => array('create correction content'));

  return $items;
}

function collection_attach_content($nid) {
  //we are debugging now so we need all of our code changes 
  //to be reflected immidiately without 'drush cc all'
  cache_clear_all();



  global $base_url;

  $count = db_query("SELECT COUNT(nid) as count FROM node WHERE type IN ('article','problem')")->fetchObject();

//if we have articles or problems
  if ($count->count > 0) {

    //get all posible content that can be attached to this collection
    $all_articles_and_problems = _collection_getAllContent();

    //construct the header of the table
    $header = array(array('data' => 'Title', 'field' => 'n.nid'),
      array('data' => "Author", 'field' => 'n.title'),
      array('data' => 'Attach', 'field' => 'Attach')
    );


    //iterate over the content and construct the rows of the table to show 
    $rows = array();
    foreach ($all_articles_and_problems as $content_item) {
      $rows[] = array(
        array('data' => l($content_item->title, 'node/' . $content_item->nid),
          'field' => 'n.title'),
        array('data' => l(user_load($content_item->uid)->name, 'user/' . $content_item->uid), 'field' => 'n.author'),
        array('data' => theme_attach_content_icon(array('type' => $content_item->type, 'url' => $base_url . '/collection/confirm/'
            . $nid . '/'
            . $content_item->nid)))
      );
    }
    return l('Add a new article', 'node/add/article')//on top of the table
        . " " . l('Add a new problem', 'node/add/problem')//on top of the table
        . theme('table', array(
          'header' => $header,
          'rows' => $rows
        ))
        . theme('pager'); //adds the pagination element in the bottom of the table
  }
  else {
    //in the (even possible?) occasion we do not have any content to list
    drupal_set_message("Sorry there is currently not a single element of content to add to a collection!" .
        "Yeap! Not even a single article... :( ");
    drupal_goto('/');
  }
}

/*
 * helper function to return all articles and problems of the site
 * to be displayed in attach to collection list
 */

function _collection_getAllContent() {
  $query = db_select('node', 'n')
      ->fields('n')
      ->condition('type', array('article', 'problem'), 'IN')
      ->extend('PagerDefault')
      ->extend('TableSort')
      ->limit(20);
  $result = $query->execute();
  return $result;
}

//the way markup is created for attach link in the table
function theme_attach_content_icon($variables) {
  $output = l(
      t('Attach'), $variables['url'], array(
    'attributes' => array(
      'class' => "attach_content_icon",
      'title' => t('Attach this ' . $variables['type'] . ' to this collection'),
      ))
  );
  return $output;
}

//function collection_theme($existing, $type, $theme, $path){
//  return array('attach_content_icon' => array(
//				      'variables' => array('type'=>NULL,'url' => NULL)
//				      ),
//	       
//  );
//}

function collection_confirm_attachment($collection_id, $content_id) {

  $count = db_query("SELECT COUNT(*) as count FROM collection_has_content WHERE cid=$collection_id")->fetchObject();
  
  dd($count);
  $how_many = $count->count + 1;

  

  db_merge('collection_has_content')
      ->key(array('cid' => $collection_id, 'nid' => $content_id))
      ->fields(array('cid' => $collection_id, 'nid' => $content_id, 'order' => $how_many))
      ->execute();
  $content = node_load($content_id);

  drupal_set_message($content->type . ' has succesfully attached to collection');
  drupal_goto('collection/' . $collection_id);
}