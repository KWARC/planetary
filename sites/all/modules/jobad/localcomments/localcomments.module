<?php

function localcomments_views_api() {
  return array("api" => "3.0");
}

/**
 * implements hook_node_view() - Called on page load
 */
function localcomments_node_view($node, $view_mode, $langcode){
  if($view_mode == "full"){
    drupal_add_js(array(
        "localcomments" => array(
            "nid" => $node->nid,
            "comments" => localcomments_getcomments($node->nid),
          )
    ), 'setting');
    $modules_url = url(drupal_get_path("module", "localcomments"));
    jobad_add_module($modules_url."/planetary.local_comments.js", "planetary.local_comments");
    jobad_initialize();
  }
}

function localcomments_getcomments($uri){
    $view = views_get_view('local_comments');
    $view->init();
    $view->set_display('block');
    $view->set_arguments(array($uri));
    $view->execute(); 

    $results = array();

    foreach($view->result as $res){
      $node = node_load($res->nid);

      $id = $node->field_id;
      $id = $id['und'][0]['value'];  
      $time = $node->last_comment_timestamp;
      $url = url("node/" . $res->nid); 

      $node = $node->body; 
      $sum = $node['und'][0]['summary']; 
      $con = $node['und'][0]['value'];      

      array_push($results, array(
          "id" => $id,
          "summary" => $sum, 
          "content" => $con,
          "last_update" => $time,
          "url" => $url,
        )
      );
    }

    return $results; 
}

/**
 * implements hook_menu() - Called when loading the menu to create a new message
 */
function localcomments_menu() {
  $items['localcomment/%/%'] = array( // Using the '%node' load argument ensures that the nid attempting to be accessed belongs to an existing node.
    'title' => 'Send Message',
    'description' => 'Send a message',
    'page callback' => 'localcomments_message_form',
    'page arguments' => array(1, 2),
    'access callback' => TRUE
  );

  return $items;
}

/**
* Callback for the menu
*/
function localcomments_message_form($url, $id) {
  module_load_include('inc', 'node', 'node.pages');
  $content_type = 'forum';
  $form = node_add($content_type);
  $form["field_uri"]["und"][0]["value"]["#value"] = $url;
  $form["field_id"]["und"][0]["value"]["#value"] = $id;

  // Just print the form directly if this is an AJAX request
  if (isset($_GET['ajax'])) {
    echo "<html><head><title>Add a comment</title>";
    echo drupal_get_js(); 
    echo drupal_get_css();
    echo "</head><body>"; 
    echo render($form);
    echo "</body></html>"; 

    // Halt page processing
    drupal_exit();
  }

  // Otherwise return the form as normal
  return $form;
}